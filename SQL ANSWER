##flip gender details values.if existing gender is M change to F & vice-varsa.
-- create
CREATE TABLE EMPLOYEE (
  empId int,
  name varchar(15),
  dept varchar(10),
  gender bit
);

-- insert
INSERT INTO EMPLOYEE(empId,name,dept,gender) VALUES (1, 'Clark', 'Sales',0);
INSERT INTO EMPLOYEE(empId,name,dept,gender) VALUES (2, 'Dave', 'Accounting',1);
INSERT INTO EMPLOYEE(empId,name,dept,gender) VALUES (3, 'Ava', 'Sales',0);

-- fetch 
-- SELECT dept,string_agg(name,',') as employee_list FROM EMPLOYEE group by dept;
select *,case when gender=1 then 0 else 1 end as new_gender from EMPLOYEE
GO


import pandas as pd
data=[(1,'vinod',5000,'sales',1),(2,'vinay',6000,'sales',0),(3,'vikas',6000,'it',1)]
cols=['id','name','salary','dept','gender']
df=pd.DataFrame(data,columns=cols)
# df=df.groupby('dept',as_index=False).agg({'name':lambda x:','.join(sorted(x))}
print(df.head())
df['gender_new']=df['gender'].apply(lambda x:0 if x==1 else 1)
print(df.head())



# Initialize Spark session
from pyspark.sql import SparkSession
from pyspark.sql.functions import current_date,date_add,col,collect_list,collect_set,concat_ws,when,lit
spark = SparkSession.builder.appName('Spark Playground').getOrCreate()

# Load the customers.csv dataset
# df = spark.read.format('csv').option('header', 'true').load('/samples/customers.csv')
data=[(1,'vinod',5000,'sales',1),(2,'vinay',6000,'sales',0),(3,'vikas',6000,'it',1)]
cols=['id','name','salary','dept','gender']
df=spark.createDataFrame(data,schema=cols)
# Show the first few rows of the DataFrame
# df.groupBy('dept').max('salary').show()
# df.groupBy('dept').agg(max(col('salary'))).show()
# df.groupBy('dept').agg(concat_ws('|',collect_set('name')).alias('employee_list')).show()
df=df.withColumn('new_gender',when(col('gender')==1,lit(0)).otherwise(lit(1)))
df.show(5)

# Display the DataFrame using the display() function.
df=df.withColumn('order_date',current_date()).withColumn('return_date',date_add(col('order_date'),10))
# df.show()


